====================================================================================================================================
VIDEOS RECOMENDADOS EN YOUTUBE
====================================================================================================================================
- https://www.youtube.com/watch?v=0eWrpsCLMJQ&list=PLC3y8-rFHvwhBRAgFinJR8KHIrCdTkZcZ

====================================================================================================================================
INSTALADORES
====================================================================================================================================
- NODEJS: https://nodejs.org/en/
- https://cli.angular.io/

====================================================================================================================================
COMANDOS
====================================================================================================================================
- Crear un proyecto: ng new my-dream-app
- Crear un componente: ng g c 

====================================================================================================================================
CONOCEPTOS
====================================================================================================================================

- Referente a las 3 diferentes maneras de indicar el 'selector' en un componente y como dependiendo de este lo invoco, así:
   - Definicion 1: selector: 'app-comptest1' , entonces lo invoco con etiquetas: <app-comptest1></app-comptest1>
   - Definicion 2: selector: '.app-comptest1', entonces lo invoco como una clase dentro de una etiqueta html: <div class="app-comptest1"></div>
   - Definicion 3: selector: '[app-comptest1]', entonces lo invoco como una propiedad dentro de una etiqueta html: <div app-comptest1></div>


- INTERPOLATION: Esto es cuando defino una variable y/o funcion dentro del elemento clase ts, es decir donde se crea la logica y lo presento en la vista, es decir en el elemento html
   - Ejemplo: 
      - defino la variable nombre en el elemento ts:
         public nombre: string = "Carlos Jimenez";
      - la invoco desde el elemento html, así:
         <p>Variable nombre invocada por string interpolaton: <b>{{nombre}}</b></p>
   - Ejemplo 2:
      - defino el metodo que concatena la variable del punto anterior y retorna un string:
           getSaludar(){
                return "Hola señor:" + this.nombre;
            }
      - la invoco desde el elemento html, así:
         <p>Invocando un método por interpolaton: <b>{{getSaludar()}}</b></p>


- PROPERTY BINDING: Cuando necesito adicionar el valor de un atributo de un componente html desde una variable de una clase, puedo hacerlo por interpolación y/o por property binding 
      - Ejemplo:
         - defino la variable en la clase ts:
            public identificador: string = "textoNombre";
         - Para invocar este desde el html tengo dos posiblilidades la primera por interpolacion o la segunda por property binding
            <input type="text"  id="{{identificador}}" value="Jorge J" />
            <input type="text"  [id]="identificador" value="Carlos J" />
         
- CLASS BINDING: Consiste en dar el estilo de visualizacion de un componente desde la variable definida en el cofigo del elemento ts.
   - Ejemplo 1:
      - Defino dos clases en el elemento css, así:
            .texto-titulo{
                color: red;
                font-size: 40px;
            }

            .texto-mensajes{
                color: blue;
                font-size: 20px;
            }

      - Defino la variable con el valor que quiero utilizar, así:
         public claseUsar: string= "texto-mensajes";

      - Ahora, en el primer text asigno la clase directamente, pero en el segundo uso Class Binding:
         <p class="texto-titulo" >Ejemplo asignando directamente la clase</p>
         <p [class]="claseUsar" >Ejemplo asignandola por class binding</p>
     
     -Ejemplo 2: mostrar o no una clase dependiendo si una variable booleana esta prendida o no.
      - Defino la variable en el elemento ts:
            public textoEsTitulo: boolean = false;
      - Desde el html usando class binding asigno la clase y esta sera desplegada o no acorde con el valor de la variable en el elemento ts
            <p [class.texto-titulo]="textoEsTitulo" >Ejemplo por class binding usando un booleano desde el codigo</p>
      
      
- STYLE BINDING: Consiste en colocar el valor de un style, dependiendo del valor de una variable.
   - Ejemplo 1: Si un texto es importante lo muestro en verde sino lo es entonce en naranja
      - Defino la variable:
         public esTextoImportante: boolean = true;
      - Desde el html pregunto por la variable así:
         <p [style.color]="esTextoImportante ? 'green' : 'orange'" >Ejemplo de style binding</p>
         
   - Ejemplo 2: defini el color de la letra desde una variable y tomo su valor en el html.
      - Defino la variable en la clase:
         public colorLetra: string = "orange";
      - Desde el html tomo su valor:
         <p [style.color]="colorLetra" >Ejemplo de style binding</p>
         
   - Ejemplo 2: defino una variable compuesta y tomo su valor desde el html
      - Defino la siguiente variable compuesta desde el ts:
            public tiluloEspecial = {
                color: "blue",
                fontStyle: "italic"
            }

      - Tomo su valor desde el html, asi:
            <p [ngStyle]="tiluloEspecial" >Ejemplo de style binding</p>


- EVENT BINDING: Consiste en invocar un metodo desde la vista en este caso nuestro elemento html al elemento ts.
   - Ejemplo.
      - Creo el boton desde el html:
            <button (click)="imprimirLog()" >Hazme Click</button>
      - Creo el metodo desde el componente ts:
            imprimirLog(){
             console.log('Hola hicieron click en el boton');
           }
   


